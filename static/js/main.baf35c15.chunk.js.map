{"version":3,"sources":["components/image-folder/modal.js","components/image-folder/gallery.js","components/image-folder/image-info.js","components/image-folder/image-input.js","App.js","reportWebVitals.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleBackdropClick","event","currentTarget","target","props","closeModal","handleKeyDown","code","window","addEventListener","this","removeEventListener","createPortal","className","onClick","width","src","href","alt","Component","ImageGalleryItem","largeImageUrl","openModal","dataset","largeimage","ImageInfo","imageName","useState","image","setImage","loading","setLoading","error","setError","page","setPage","showModal","setShowModal","setSrc","setAlt","toggleModal","useEffect","fetch","then","response","json","prevImage","hits","catch","finally","length","map","hit","user","previewURL","largeImageURL","id","type","ImageInput","onSubmit","inputData","setInputData","preventDefault","toast","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","App","setImageName","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.baf35c15.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './css/modal.css';\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal-backdrop \" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal-content\">\r\n          <img width=\"400\" src={this.props.href} alt={this.props.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction ImageGalleryItem({ largeImageUrl, openModal, alt, src }) {\r\n  const handleClick = event => {\r\n    openModal(event.target.dataset.largeimage, alt);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-largeimage={largeImageUrl}\r\n        onClick={handleClick}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import { useEffect, useState } from 'react';\nimport Modal from './modal';\nimport Gallery from './gallery';\nimport './css/gallery.css';\nexport default function ImageInfo({ imageName }) {\n  const [image, setImage] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [src, setSrc] = useState('');\n  const [alt, setAlt] = useState('');\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    if (imageName !== '') {\n      setLoading(true);\n      fetch(\n        `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${imageName}&page=${page}&per_page=12&key=21857111-8554c096d1798b5dae4546d72`,\n      )\n        .then(response => response.json())\n        .then(image => setImage(prevImage => [...prevImage, ...image.hits]))\n        .catch(error => setError(error))\n        .finally(() => setLoading(false));\n    }\n  }, [image.hits, imageName, page]);\n  const hendlePageUp = () => {\n    setPage(page + 1);\n  };\n  const openModal = (src, alt) => {\n    setSrc(src);\n    setAlt(alt);\n    toggleModal();\n  };\n\n  return (\n    <section>\n      <h1>ImageInfo </h1>\n      {error && <h1>Картинки {imageName} нет</h1>}\n      {loading && <div>loading...</div>}\n      {imageName === 0 && <div>Введите название картинки</div>}\n      {image.length > 0 && (\n        <div>\n          <ul className=\"ImageGallery\">\n            {image.map(hit => {\n              return (\n                <li className=\"ImageGalleryItem\" key={hit.id}>\n                  <Gallery\n                    alt={hit.user}\n                    src={hit.previewURL}\n                    largeImageUrl={hit.largeImageURL}\n                    openModal={openModal}\n                  />\n                </li>\n              );\n            })}\n\n            <div>\n              {showModal && (\n                <Modal closeModal={toggleModal} href={src} alt={alt} />\n              )}\n            </div>\n            <button type=\"button\" className=\"loadBtn\" onClick={hendlePageUp}>\n              Load more\n            </button>\n          </ul>\n        </div>\n      )}\n    </section>\n  );\n}\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function ImageInput({ onSubmit }) {\n  const [inputData, setInputData] = useState('');\n  const handleInputChange = event => {\n    setInputData(event.currentTarget.value.toLowerCase());\n  };\n  const reset = () => {\n    setInputData('');\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputData === '') {\n      toast.error('Введите имя image!');\n      return;\n    }\n    onSubmit(inputData);\n    reset();\n  };\n\n  return (\n    <form className=\"SearchForm\" onSubmit={handleSubmit}>\n      <button type=\"submit\" className=\"SearchForm-button\">\n        <span className=\"SearchForm-button-label\">Search</span>\n      </button>\n\n      <input\n        className=\"SearchForm-input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        value={inputData}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n}\n","import { useState } from 'react';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './components/image-folder/css/header.css';\r\nimport ImageInfo from './components/image-folder/image-info';\r\nimport InputImage from './components/image-folder/image-input';\r\n\r\nfunction App() {\r\n  const [imageName, setImageName] = useState('');\r\n  const formSubmit = imageName => {\r\n    setImageName({ imageName });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"Searchbar\">\r\n        <InputImage onSubmit={formSubmit} />\r\n\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </header>\r\n\r\n      <ImageInfo imageName={imageName} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}